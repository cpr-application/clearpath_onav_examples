#! /usr/bin/env python3

import rospy
from clearpath_onav_api_examples_lib.coordinate_lat_lon import CoordinateLatLon
from clearpath_onav_api_examples_lib.localization_survey import LocalizationSurvey
from clearpath_onav_api_examples_lib.services import Services
from clearpath_onav_api_examples_lib.ros_node import RosNode
import time


class SystemInitialization(RosNode):
    """Initialize the system, including the base station.

    When deploying to a real system, it will typically be necessary to combine one
    or more of these initialization functions with the other mission examples.
    """

    def __init__(self):
        """Initialize the mission details and server connection."""

        # Logging level set to debug to monitor the survey progress.
        # Set to rospy.INFO to remove the debug messages
        RosNode.__init__(self, 'system_initialization', log_level=rospy.DEBUG)
        self._survey = LocalizationSurvey()

    def run(self):
        """Perform the initialization."""

        # Step 1: survey the Base Station
        if not self._survey.startSurvey():
            rospy.logerr("Failed to start survey")
            return False
        while not self._survey.isSurveyComplete():
            time.sleep(1.0)
        return self._survey.getSurveySuccess()

        # Step 2: set the datum
        datum_latlon = CoordinateLatLon(50.109461, -97.318978)
        if not Services.setDatum(datum_latlon):
            return False


if __name__ == '__main__':
    if SystemInitialization().run():
        print("System initialization completed successfully")
    else:
        print("System initialization failed")
