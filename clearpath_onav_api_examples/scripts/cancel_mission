#! /usr/bin/env python3

import rospy
from clearpath_onav_api_examples_lib.ros_node import RosNode
from clearpath_onav_api_examples_lib.waypoint import Waypoint
from clearpath_onav_api_examples_lib.mission import Mission


class CancelMission(RosNode):
    """Run 'simple_mission_1', but cancel/stop it part way through execution.

    The coordinates used in this example are based on the cpr_agriculture_gazebo
    world and should be updated to match the location in which the user's
    robot will be operating.
    """

    def __init__(self):
        """Initialize the mission details and server connection."""

        RosNode.__init__(self, 'cancel_mission')
        waypoints = [
            Waypoint("A", "uuid-waypoint-1", 50.1094938, -97.3191085),
            Waypoint("B", "uuid-waypoint-2", 50.1095100, -97.3192000),
            Waypoint("C", "uuid-waypoint-3", 50.1095255, -97.3192484),
        ]
        self.mission = Mission("Cancel mission", "uuid-mission-1", waypoints)

    def run(self):
        """Execute the mission, then stop it after 20 seconds."""

        if not self.mission.startMission():
            return False
        # Stop the mission after 20 seconds
        start_time = rospy.get_time()
        while not self.mission.isMissionComplete() and rospy.get_time() - start_time < 10.0:
            rospy.sleep(1.0)
        # Expect that the mission is not complete, since it was stopped early
        if self.mission.isMissionComplete():
            return False
        # Now, stop the mission
        self.mission.stopMission()
        # Expect that the mission is complete (since all goals are cleared)
        # but that the mission was not successful, since it was stopped
        if not self.mission.isMissionComplete():
            return False
        if self.mission.getMissionSuccess():
            return False
        # All checks completed successfully
        return True


if __name__ == '__main__':
    if CancelMission().run():
        print("Mission stopped successfully")
    else:
        print("Failed to stop mission")
